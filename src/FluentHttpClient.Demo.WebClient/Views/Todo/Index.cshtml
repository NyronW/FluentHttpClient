@model Wrapture.Pagination.PagedResult<TodoItem>
@{
    var pageNo = Model?.Pager is null ? 1 : Model.Pager.CurrentPage;

    var nextPageNo = pageNo + 1;
    var prevPageNo = pageNo - 1;

    if (prevPageNo < 1) prevPageNo = 1;

    var pageSize = Model?.Pager is null ? 10 : Model.Pager.PageSize;
}
<h1>Todo List</h1>
<hr />

@if (TempData["Message"] != null)
{
    <h5 class="text-info">@TempData["Message"]</h5>
}

<div class="row pt-2">
    <div class="col-2">
        <a asp-area="" asp-action="create" class="btn btn-sm btn-success">Add new</a>
    </div>

    <div class="col-4">
        <a id="prevPageBtn" class="btn btn-sm btn-primary" href="/todo/index?pageNo=@prevPageNo&pageSize=@pageSize" disabled>Prev Page</a>
        <a id="nextPageBtn" class="btn btn-sm btn-primary" href="/todo/index?pageNo=@nextPageNo&pageSize=@pageSize">Next Page</a>
    </div>

    <div class="col-3">
        <b id="totalItems">Total Items: 0</b>
    </div>
    <div class="col-1 align-content-end">
        Page Size
    </div>
    <div class="col-2">
        <a class="btn round-btn" href="/todo/index?pageNo=@pageNo&pageSize=10">10</a>
        <a class="btn round-btn" href="/todo/index?pageNo=@pageNo&pageSize=20">20</a>
        <a class="btn round-btn" href="/todo/index?pageNo=@pageNo&pageSize=50">50</a>
    </div>
</div>

<table id="todoTable" class="table table-striped table-bordered">
    <thead>
        <tr>
            <th>ID</th>
            <th>Title</th>
            <th>Description</th>
            <th>Completed</th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @if (Model.Items is not null)
            @foreach (var todo in Model.Items)
            {
                <tr>
                    <td>@todo.Id</td>
                    <td>@todo.Title</td>
                    <td>@todo.Description</td>
                    <td>@todo.Completed</td>
                </tr>
            }
    </tbody>
</table>

@section Styles {
    <style>
        /* Add initial and animated styles for rows */
        .table-row {
            opacity: 0; /* Initially hidden */
            transform: translateY(20px); /* Start slightly below */
            transition: opacity 0.5s ease, transform 0.5s ease; /* Smooth transition */
        }

            .table-row.visible {
                opacity: 1; /* Fully visible */
                transform: translateY(0); /* Move to the original position */
            }

        .btn.round-btn {
            border: 2px solid #007bff; /* Blue border */
            color: #007bff; /* Blue text */
            background-color: white; /* White background */
            width: 40px; /* Set equal width */
            height: 40px; /* Set equal height */
            border-radius: 50%; /* Make the button perfectly circular */
            font-size: 14px; /* Font size */
            display: inline-flex; /* Center the text */
            justify-content: center; /* Center horizontally */
            align-items: center; /* Center vertically */
            cursor: pointer; /* Pointer cursor for hover */
            transition: all 0.3s ease; /* Smooth hover effect */
        }

            .btn.round-btn:hover {
                background-color: #007bff; /* Blue background on hover */
                color: white; /* White text on hover */
            }

            .btn.round-btn:focus {
                outline: none; /* Remove focus outline */
                box-shadow: 0 0 5px rgba(0, 123, 255, 0.5); /* Focus glow */
            }

    </style>
}
